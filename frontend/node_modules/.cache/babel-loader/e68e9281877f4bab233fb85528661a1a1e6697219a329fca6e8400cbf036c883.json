{"ast":null,"code":"/**\n * Main App component for the ZK Co-Processor Dashboard\n * This dashboard provides an educational interface to learn about and interact with\n * ZK co-processors for offloading computations from Ethereum L1\n */import React,{useState,useEffect}from'react';import{useZKVerifier}from'../hooks/useZKVerifier';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);// Educational links about ZK proofs and related technologies\nconst EDUCATIONAL_LINKS=[{title:\"Introduction to Zero-Knowledge Proofs\",url:\"https://ethereum.org/en/zero-knowledge-proofs/\",description:\"Learn the basics of ZK proofs from Ethereum.org\"},{title:\"EigenLayer Documentation\",url:\"https://docs.eigenlayer.xyz/\",description:\"Understand EigenLayer's restaking mechanism\"},{title:\"ZK Co-Processors Explained\",url:\"https://blog.polygon.technology/polygon-2-0-on-chain-zkps/\",description:\"Polygon's explanation of ZK co-processors\"},{title:\"RISC Zero Documentation\",url:\"https://www.risczero.com/docs\",description:\"Learn about RISC Zero's zkVM for generating ZK proofs\"}];/**\n * App component for the ZK Co-Processor Dashboard\n */const App=()=>{// Use our custom hook to interact with the blockchain\nconst{requestComputation,getTotalTasksProcessed,getLatestComparisons,isConnected,isCorrectNetwork,account,networkName,networkId,connectWallet,toggleNetwork,isLoading,initialized}=useZKVerifier();// State variables\nconst[comparisonData,setComparisonData]=useState(null);const[totalTasks,setTotalTasks]=useState(0);const[inputData,setInputData]=useState('');const[comparisons,setComparisons]=useState([]);const[showNetworkWarning,setShowNetworkWarning]=useState(false);const[connectionError,setConnectionError]=useState('');const[selectedComparison,setSelectedComparison]=useState(null);const[showDetailModal,setShowDetailModal]=useState(false);const[processingComplete,setProcessingComplete]=useState(false);// Fetch initial data when component mounts\nuseEffect(()=>{const fetchInitialData=async()=>{try{const tasks=await getTotalTasksProcessed();setTotalTasks(tasks);const latestComparisons=await getLatestComparisons();// Limit to 5 entries\nsetComparisons(latestComparisons.slice(0,5));// Set the most recent comparison as the current data for the chart\nif(latestComparisons&&latestComparisons.length>0){setComparisonData(latestComparisons[0]);}}catch(error){console.error('Error fetching initial data:',error);}};fetchInitialData();// Show network warning if not on Sepolia and connected\nif(isConnected&&!isCorrectNetwork){setShowNetworkWarning(true);}else{setShowNetworkWarning(false);}},[getTotalTasksProcessed,getLatestComparisons,isConnected,isCorrectNetwork]);// Listen for comparisons updates\nuseEffect(()=>{// If processing is done and we have comparisons\nif(processingComplete&&comparisons.length>0){// Reset the processing complete flag\nsetProcessingComplete(false);// Update the chart with the latest comparison\nsetComparisonData(comparisons[0]);}},[processingComplete,comparisons]);// Handle computation request\nconst handleComputationRequest=async()=>{if(!inputData){alert('Please enter some input data to process');return;}try{setConnectionError('');setProcessingComplete(false);// Send computation request to the smart contract\nawait requestComputation(inputData);// Update our data\nconst tasks=await getTotalTasksProcessed();setTotalTasks(tasks);// Fetch latest comparisons after a short delay to allow blockchain to process\nsetTimeout(async()=>{const latestComparisons=await getLatestComparisons();// Limit to 5 entries\nsetComparisons(latestComparisons.slice(0,5));setProcessingComplete(true);},3000);// Clear the input field\nsetInputData('');}catch(error){console.error('Error:',error);setConnectionError(error.message||'Error processing computation request');}};// Handle network toggle\nconst handleNetworkToggle=async()=>{await toggleNetwork();// Note: The page will reload due to network change\n};// Handle comparison row click\nconst handleComparisonClick=(comparison,index)=>{// Create extended information for the selected comparison\nconst extendedInfo={...comparison,index,// Additional calculated fields\nefficiencyPercentage:Math.round((comparison.normalGasUsed-comparison.zkGasUsed)/comparison.normalGasUsed*100),// In a real app, the following would be fetched from the contract or from events\noriginalMessage:index===0?inputData||\"Sample computational task\":`Sample task ${index}`,inputBytes:comparison.zkGasUsed/50,// For demonstration - simulating input bytes based on gas\nverificationDependencies:[\"RISC0 Verifier\",\"Hash Function Library\",\"EigenLayer Staking Contract\"],processingDetails:{proverTime:Math.round(comparison.timeSaved*0.6),verifierTime:Math.round(comparison.timeSaved*0.4),proofSize:Math.round(comparison.zkGasUsed/100),trustAssumptions:\"Restaked ETH via EigenLayer\"}};setSelectedComparison(extendedInfo);setShowDetailModal(true);};// Close the detail modal\nconst closeDetailModal=()=>{setShowDetailModal(false);setSelectedComparison(null);};// Chart data configuration for visualization\nconst chartData={labels:['ZK Co-Processor','Normal Processing'],datasets:[{label:'Gas Usage Comparison',data:comparisonData?[comparisonData.zkGasUsed,comparisonData.normalGasUsed]:[0,0],backgroundColor:['rgba(54, 162, 235, 0.6)','rgba(255, 99, 132, 0.6)']}]};// Chart options\nconst chartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Gas Usage Comparison: ZK vs Normal Processing'},tooltip:{callbacks:{label:function(context){const value=context.raw;return`Gas Used: ${value.toLocaleString()} units`;}}}},scales:{y:{beginAtZero:true,title:{display:true,text:'Gas Units'}}}};// Calculate gas savings percentage if comparison data is available\nconst calculateSavings=()=>{if(!comparisonData)return'0';const savings=comparisonData.normalGasUsed-comparisonData.zkGasUsed;return Math.round(savings/comparisonData.normalGasUsed*100);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"ZK Co-Processor Dashboard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wallet-info\",children:isConnected?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"connected-wallet\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"wallet-address\",children:`${account.substring(0,6)}...${account.substring(account.length-4)}`}),/*#__PURE__*/_jsx(\"span\",{className:`network-indicator ${isCorrectNetwork?'correct-network':'wrong-network'}`,children:networkName})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleNetworkToggle,className:\"network-toggle-btn\",title:`Switch to ${networkId==='sepolia'?'Ethereum Mainnet':'Sepolia Testnet'}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"toggle-icon\",children:\"\\u21C4\"}),networkId==='sepolia'?'Switch to Mainnet':'Switch to Sepolia']})]}):/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,className:\"connect-wallet-btn\",children:\"Connect Wallet\"})})]}),showNetworkWarning&&/*#__PURE__*/_jsxs(\"div\",{className:\"network-warning\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"You are currently on \",networkName,\". This application runs on Sepolia testnet.\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNetworkToggle,children:\"Switch to Sepolia\"})]}),connectionError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsx(\"p\",{children:connectionError})}),/*#__PURE__*/_jsxs(\"section\",{className:\"educational-intro\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"What is a ZK Co-Processor?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-text\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"A \",/*#__PURE__*/_jsx(\"strong\",{children:\"Zero-Knowledge Co-Processor\"}),\" offloads computational tasks from Ethereum's L1 to specialized processors, dramatically reducing gas costs while maintaining security through cryptographic proofs.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Using \",/*#__PURE__*/_jsx(\"strong\",{children:\"EigenLayer's restaking mechanism\"}),\", these Co-Processors leverage existing staked ETH as security for off-chain computations, creating an efficient execution environment without sacrificing trustlessness.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Common use cases include complex verifications like digital signatures, AI model inference, and computational-heavy operations that would otherwise be prohibitively expensive on-chain.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-diagram\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://miro.medium.com/v2/resize:fit:1400/format:webp/1*bXWR05L1Tq8BrhEQwhyoXg.png\",alt:\"ZK Proof Diagram\"}),/*#__PURE__*/_jsx(\"p\",{className:\"image-caption\",children:\"Zero-Knowledge cryptography enables verifiable computation off-chain\"})]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"How ZK Proofs Make This Possible\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Zero-Knowledge proofs allow one party (the prover) to prove to another party (the verifier) that a statement is true, without revealing any additional information beyond the validity of the statement itself. In blockchain applications, this means computation can happen off-chain, with only a compact proof being submitted and verified on-chain.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"educational-links\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Learn More About ZK Technology\"}),/*#__PURE__*/_jsx(\"div\",{className:\"links-container\",children:EDUCATIONAL_LINKS.map((link,index)=>/*#__PURE__*/_jsxs(\"a\",{href:link.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"edu-link\",children:[/*#__PURE__*/_jsx(\"h4\",{children:link.title}),/*#__PURE__*/_jsx(\"p\",{children:link.description})]},index))})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Tasks Processed\"}),/*#__PURE__*/_jsx(\"p\",{className:\"stat-value\",children:totalTasks})]}),comparisonData&&/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Time Saved\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"stat-value\",children:[comparisonData.timeSaved,\" ms\"]})]}),comparisonData&&/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Gas Savings\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"stat-value\",children:[calculateSavings(),\"%\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:comparisonData&&/*#__PURE__*/_jsx(Bar,{data:chartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"interactive-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"computation-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Try it yourself: Request a ZK Computation\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"computation-explainer\",children:[\"Enter any text data below to simulate sending a computation task to the ZK Co-Processor. The system will process your input and generate a comparison between ZK and normal processing methods.\",/*#__PURE__*/_jsx(\"strong\",{children:\"This is running on Sepolia testnet and does not use real ETH.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-content\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:inputData,onChange:e=>setInputData(e.target.value),placeholder:\"Enter data for ZK computation (e.g., 'Verify this signature' or 'Calculate merkle proof')...\",rows:4}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-explanation\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"How It Works:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"1. Your text is converted to bytes and sent to the smart contract\",/*#__PURE__*/_jsx(\"br\",{}),\"2. The contract measures computation complexity based on input size\",/*#__PURE__*/_jsx(\"br\",{}),\"3. A simulated ZK proof is generated and verified\",/*#__PURE__*/_jsx(\"br\",{}),\"4. Results comparing gas usage and time are displayed above\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleComputationRequest,disabled:isLoading||!isConnected&&initialized,className:\"request-button\",children:isLoading?/*#__PURE__*/_jsxs(\"span\",{className:\"loading-text\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Processing...\"})]}):'Request ZK Computation'}),!isConnected&&initialized&&/*#__PURE__*/_jsx(\"p\",{className:\"connect-wallet-prompt\",children:\"Please connect your wallet to request computations.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recent-comparisons\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recent Proof Comparisons\"}),/*#__PURE__*/_jsx(\"p\",{className:\"click-instruction\",children:\"Click on any row to view detailed information\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ZK Gas Used\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Normal Gas Used\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time Saved (ms)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Efficiency Gain\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[isLoading&&/*#__PURE__*/_jsx(\"tr\",{className:\"loading-comparison\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"table-loading\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Processing your computation...\"})]})})}),comparisons.map((comparison,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:comparison.isNew?'highlight-row':'',onClick:()=>handleComparisonClick(comparison,index),children:[/*#__PURE__*/_jsx(\"td\",{children:comparison.zkGasUsed.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:comparison.normalGasUsed.toLocaleString()}),/*#__PURE__*/_jsxs(\"td\",{children:[comparison.timeSaved,\" ms\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[Math.round((comparison.normalGasUsed-comparison.zkGasUsed)/comparison.normalGasUsed*100),\"%\"]})]},index))]})]})]})]})]}),showDetailModal&&selectedComparison&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:closeDetailModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"detail-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-modal\",onClick:closeDetailModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Computation Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Performance Metrics\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metrics\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"ZK Gas Used:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[selectedComparison.zkGasUsed.toLocaleString(),\" units\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Normal Gas Used:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[selectedComparison.normalGasUsed.toLocaleString(),\" units\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Time Saved:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[selectedComparison.timeSaved,\" ms\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Efficiency Gain:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[selectedComparison.efficiencyPercentage,\"%\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Computation Input\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-input\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Original Message:\"}),\" \",selectedComparison.originalMessage]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Input Size:\"}),\" \",selectedComparison.inputBytes,\" bytes\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Processing Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-processing\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Prover Time:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[selectedComparison.processingDetails.proverTime,\" ms\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Verifier Time:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[selectedComparison.processingDetails.verifierTime,\" ms\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Proof Size:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[selectedComparison.processingDetails.proofSize,\" bytes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Trust Assumptions:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:selectedComparison.processingDetails.trustAssumptions})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Dependencies\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"dependencies-list\",children:selectedComparison.verificationDependencies.map((dep,index)=>/*#__PURE__*/_jsx(\"li\",{children:dep},index))})]})]})}),/*#__PURE__*/_jsxs(\"footer\",{className:\"dashboard-footer\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Built on Ethereum's Sepolia testnet using EigenLayer's restaking technology\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This is an educational demonstration to showcase the potential of ZK Co-Processors\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"version-info\",children:[\"Version 1.0.1 | \",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/yourusername/zkco\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"GitHub\"})]})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useZKVerifier","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","EDUCATIONAL_LINKS","title","url","description","App","requestComputation","getTotalTasksProcessed","getLatestComparisons","isConnected","isCorrectNetwork","account","networkName","networkId","connectWallet","toggleNetwork","isLoading","initialized","comparisonData","setComparisonData","totalTasks","setTotalTasks","inputData","setInputData","comparisons","setComparisons","showNetworkWarning","setShowNetworkWarning","connectionError","setConnectionError","selectedComparison","setSelectedComparison","showDetailModal","setShowDetailModal","processingComplete","setProcessingComplete","fetchInitialData","tasks","latestComparisons","slice","length","error","console","handleComputationRequest","alert","setTimeout","message","handleNetworkToggle","handleComparisonClick","comparison","index","extendedInfo","efficiencyPercentage","Math","round","normalGasUsed","zkGasUsed","originalMessage","inputBytes","verificationDependencies","processingDetails","proverTime","timeSaved","verifierTime","proofSize","trustAssumptions","closeDetailModal","chartData","labels","datasets","label","data","backgroundColor","chartOptions","responsive","plugins","legend","position","display","text","tooltip","callbacks","context","value","raw","toLocaleString","scales","y","beginAtZero","calculateSavings","savings","className","children","substring","onClick","src","alt","map","link","href","target","rel","options","onChange","e","placeholder","rows","disabled","colSpan","isNew","stopPropagation","dep"],"sources":["/Users/duy/Documents/project/zkco/frontend/src/components/App.jsx"],"sourcesContent":["/**\n * Main App component for the ZK Co-Processor Dashboard\n * This dashboard provides an educational interface to learn about and interact with\n * ZK co-processors for offloading computations from Ethereum L1\n */\nimport React, { useState, useEffect } from 'react';\nimport { useZKVerifier } from '../hooks/useZKVerifier';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// Educational links about ZK proofs and related technologies\nconst EDUCATIONAL_LINKS = [\n  {\n    title: \"Introduction to Zero-Knowledge Proofs\",\n    url: \"https://ethereum.org/en/zero-knowledge-proofs/\",\n    description: \"Learn the basics of ZK proofs from Ethereum.org\"\n  },\n  {\n    title: \"EigenLayer Documentation\",\n    url: \"https://docs.eigenlayer.xyz/\",\n    description: \"Understand EigenLayer's restaking mechanism\"\n  },\n  {\n    title: \"ZK Co-Processors Explained\",\n    url: \"https://blog.polygon.technology/polygon-2-0-on-chain-zkps/\",\n    description: \"Polygon's explanation of ZK co-processors\"\n  },\n  {\n    title: \"RISC Zero Documentation\",\n    url: \"https://www.risczero.com/docs\",\n    description: \"Learn about RISC Zero's zkVM for generating ZK proofs\"\n  }\n];\n\n/**\n * App component for the ZK Co-Processor Dashboard\n */\nconst App = () => {\n  // Use our custom hook to interact with the blockchain\n  const { \n    requestComputation, \n    getTotalTasksProcessed,\n    getLatestComparisons,\n    isConnected,\n    isCorrectNetwork,\n    account,\n    networkName,\n    networkId,\n    connectWallet,\n    toggleNetwork,\n    isLoading,\n    initialized\n  } = useZKVerifier();\n\n  // State variables\n  const [comparisonData, setComparisonData] = useState(null);\n  const [totalTasks, setTotalTasks] = useState(0);\n  const [inputData, setInputData] = useState('');\n  const [comparisons, setComparisons] = useState([]);\n  const [showNetworkWarning, setShowNetworkWarning] = useState(false);\n  const [connectionError, setConnectionError] = useState('');\n  const [selectedComparison, setSelectedComparison] = useState(null);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [processingComplete, setProcessingComplete] = useState(false);\n\n  // Fetch initial data when component mounts\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const tasks = await getTotalTasksProcessed();\n        setTotalTasks(tasks);\n        \n        const latestComparisons = await getLatestComparisons();\n        // Limit to 5 entries\n        setComparisons(latestComparisons.slice(0, 5));\n        \n        // Set the most recent comparison as the current data for the chart\n        if (latestComparisons && latestComparisons.length > 0) {\n          setComparisonData(latestComparisons[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching initial data:', error);\n      }\n    };\n    \n    fetchInitialData();\n    \n    // Show network warning if not on Sepolia and connected\n    if (isConnected && !isCorrectNetwork) {\n      setShowNetworkWarning(true);\n    } else {\n      setShowNetworkWarning(false);\n    }\n  }, [getTotalTasksProcessed, getLatestComparisons, isConnected, isCorrectNetwork]);\n\n  // Listen for comparisons updates\n  useEffect(() => {\n    // If processing is done and we have comparisons\n    if (processingComplete && comparisons.length > 0) {\n      // Reset the processing complete flag\n      setProcessingComplete(false);\n      \n      // Update the chart with the latest comparison\n      setComparisonData(comparisons[0]);\n    }\n  }, [processingComplete, comparisons]);\n\n  // Handle computation request\n  const handleComputationRequest = async () => {\n    if (!inputData) {\n      alert('Please enter some input data to process');\n      return;\n    }\n    \n    try {\n      setConnectionError('');\n      setProcessingComplete(false);\n      \n      // Send computation request to the smart contract\n      await requestComputation(inputData);\n      \n      // Update our data\n      const tasks = await getTotalTasksProcessed();\n      setTotalTasks(tasks);\n      \n      // Fetch latest comparisons after a short delay to allow blockchain to process\n      setTimeout(async () => {\n        const latestComparisons = await getLatestComparisons();\n        // Limit to 5 entries\n        setComparisons(latestComparisons.slice(0, 5));\n        setProcessingComplete(true);\n      }, 3000);\n      \n      // Clear the input field\n      setInputData('');\n    } catch (error) {\n      console.error('Error:', error);\n      setConnectionError(error.message || 'Error processing computation request');\n    }\n  };\n  \n  // Handle network toggle\n  const handleNetworkToggle = async () => {\n    await toggleNetwork();\n    // Note: The page will reload due to network change\n  };\n\n  // Handle comparison row click\n  const handleComparisonClick = (comparison, index) => {\n    // Create extended information for the selected comparison\n    const extendedInfo = {\n      ...comparison,\n      index,\n      // Additional calculated fields\n      efficiencyPercentage: Math.round(((comparison.normalGasUsed - comparison.zkGasUsed) / comparison.normalGasUsed) * 100),\n      // In a real app, the following would be fetched from the contract or from events\n      originalMessage: index === 0 ? inputData || \"Sample computational task\" : `Sample task ${index}`,\n      inputBytes: comparison.zkGasUsed / 50, // For demonstration - simulating input bytes based on gas\n      verificationDependencies: [\n        \"RISC0 Verifier\",\n        \"Hash Function Library\", \n        \"EigenLayer Staking Contract\"\n      ],\n      processingDetails: {\n        proverTime: Math.round(comparison.timeSaved * 0.6),\n        verifierTime: Math.round(comparison.timeSaved * 0.4),\n        proofSize: Math.round(comparison.zkGasUsed / 100),\n        trustAssumptions: \"Restaked ETH via EigenLayer\"\n      }\n    };\n    \n    setSelectedComparison(extendedInfo);\n    setShowDetailModal(true);\n  };\n\n  // Close the detail modal\n  const closeDetailModal = () => {\n    setShowDetailModal(false);\n    setSelectedComparison(null);\n  };\n\n  // Chart data configuration for visualization\n  const chartData = {\n    labels: ['ZK Co-Processor', 'Normal Processing'],\n    datasets: [\n      {\n        label: 'Gas Usage Comparison',\n        data: comparisonData ? [comparisonData.zkGasUsed, comparisonData.normalGasUsed] : [0, 0],\n        backgroundColor: ['rgba(54, 162, 235, 0.6)', 'rgba(255, 99, 132, 0.6)'],\n      },\n    ],\n  };\n\n  // Chart options\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Gas Usage Comparison: ZK vs Normal Processing',\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            return `Gas Used: ${value.toLocaleString()} units`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Gas Units'\n        }\n      }\n    }\n  };\n\n  // Calculate gas savings percentage if comparison data is available\n  const calculateSavings = () => {\n    if (!comparisonData) return '0';\n    const savings = comparisonData.normalGasUsed - comparisonData.zkGasUsed;\n    return Math.round((savings / comparisonData.normalGasUsed) * 100);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <h1>ZK Co-Processor Dashboard</h1>\n        <div className=\"wallet-info\">\n          {isConnected ? (\n            <>\n              <div className=\"connected-wallet\">\n                <span className=\"wallet-address\">{`${account.substring(0, 6)}...${account.substring(account.length - 4)}`}</span>\n                <span \n                  className={`network-indicator ${isCorrectNetwork ? 'correct-network' : 'wrong-network'}`}\n                >\n                  {networkName}\n                </span>\n              </div>\n              <button \n                onClick={handleNetworkToggle} \n                className=\"network-toggle-btn\"\n                title={`Switch to ${networkId === 'sepolia' ? 'Ethereum Mainnet' : 'Sepolia Testnet'}`}\n              >\n                <span className=\"toggle-icon\">⇄</span>\n                {networkId === 'sepolia' ? 'Switch to Mainnet' : 'Switch to Sepolia'}\n              </button>\n            </>\n          ) : (\n            <button onClick={connectWallet} className=\"connect-wallet-btn\">\n              Connect Wallet\n            </button>\n          )}\n        </div>\n      </header>\n      \n      {/* Network warning alert */}\n      {showNetworkWarning && (\n        <div className=\"network-warning\">\n          <p>You are currently on {networkName}. This application runs on Sepolia testnet.</p>\n          <button onClick={handleNetworkToggle}>Switch to Sepolia</button>\n        </div>\n      )}\n      \n      {/* Connection error message */}\n      {connectionError && (\n        <div className=\"error-message\">\n          <p>{connectionError}</p>\n        </div>\n      )}\n      \n      <section className=\"educational-intro\">\n        <h2>What is a ZK Co-Processor?</h2>\n        <div className=\"info-container\">\n          <div className=\"info-text\">\n            <p>\n              A <strong>Zero-Knowledge Co-Processor</strong> offloads computational tasks from Ethereum's L1 to specialized processors,\n              dramatically reducing gas costs while maintaining security through cryptographic proofs.\n            </p>\n            <p>\n              Using <strong>EigenLayer's restaking mechanism</strong>, these Co-Processors leverage existing staked ETH as security\n              for off-chain computations, creating an efficient execution environment without sacrificing trustlessness.\n            </p>\n            <p>\n              Common use cases include complex verifications like digital signatures, AI model inference, and \n              computational-heavy operations that would otherwise be prohibitively expensive on-chain.\n            </p>\n          </div>\n          <div className=\"info-diagram\">\n            <img src=\"https://miro.medium.com/v2/resize:fit:1400/format:webp/1*bXWR05L1Tq8BrhEQwhyoXg.png\" alt=\"ZK Proof Diagram\" />\n            <p className=\"image-caption\">Zero-Knowledge cryptography enables verifiable computation off-chain</p>\n          </div>\n        </div>\n        \n        <h3>How ZK Proofs Make This Possible</h3>\n        <p>\n          Zero-Knowledge proofs allow one party (the prover) to prove to another party (the verifier) that a statement is true,\n          without revealing any additional information beyond the validity of the statement itself. In blockchain applications, \n          this means computation can happen off-chain, with only a compact proof being submitted and verified on-chain.\n        </p>\n        \n        <div className=\"educational-links\">\n          <h3>Learn More About ZK Technology</h3>\n          <div className=\"links-container\">\n            {EDUCATIONAL_LINKS.map((link, index) => (\n              <a key={index} href={link.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"edu-link\">\n                <h4>{link.title}</h4>\n                <p>{link.description}</p>\n              </a>\n            ))}\n          </div>\n        </div>\n      </section>\n      \n      <section className=\"dashboard-content\">\n        <div className=\"stats-section\">\n          <div className=\"stats-container\">\n            <div className=\"stat-card\">\n              <h3>Total Tasks Processed</h3>\n              <p className=\"stat-value\">{totalTasks}</p>\n            </div>\n            \n            {comparisonData && (\n              <div className=\"stat-card\">\n                <h3>Time Saved</h3>\n                <p className=\"stat-value\">{comparisonData.timeSaved} ms</p>\n              </div>\n            )}\n            \n            {comparisonData && (\n              <div className=\"stat-card\">\n                <h3>Gas Savings</h3>\n                <p className=\"stat-value\">\n                  {calculateSavings()}%\n                </p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"chart-container\">\n            {comparisonData && <Bar data={chartData} options={chartOptions} />}\n          </div>\n        </div>\n        \n        <div className=\"interactive-section\">\n          <div className=\"computation-form\">\n            <h2>Try it yourself: Request a ZK Computation</h2>\n            <p className=\"computation-explainer\">\n              Enter any text data below to simulate sending a computation task to the ZK Co-Processor.\n              The system will process your input and generate a comparison between ZK and normal processing methods.\n              <strong>This is running on Sepolia testnet and does not use real ETH.</strong>\n            </p>\n            \n            <div className=\"form-content\">\n              <textarea\n                value={inputData}\n                onChange={(e) => setInputData(e.target.value)}\n                placeholder=\"Enter data for ZK computation (e.g., 'Verify this signature' or 'Calculate merkle proof')...\"\n                rows={4}\n              />\n              <div className=\"input-explanation\">\n                <h4>How It Works:</h4>\n                <p>\n                  1. Your text is converted to bytes and sent to the smart contract<br />\n                  2. The contract measures computation complexity based on input size<br />\n                  3. A simulated ZK proof is generated and verified<br />\n                  4. Results comparing gas usage and time are displayed above\n                </p>\n              </div>\n              <button \n                onClick={handleComputationRequest}\n                disabled={isLoading || (!isConnected && initialized)}\n                className=\"request-button\"\n              >\n                {isLoading ? (\n                  <span className=\"loading-text\">\n                    <span className=\"loading-spinner\"></span>\n                    <span>Processing...</span>\n                  </span>\n                ) : (\n                  'Request ZK Computation'\n                )}\n              </button>\n              \n              {!isConnected && initialized && (\n                <p className=\"connect-wallet-prompt\">\n                  Please connect your wallet to request computations.\n                </p>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"recent-comparisons\">\n            <h2>Recent Proof Comparisons</h2>\n            <p className=\"click-instruction\">Click on any row to view detailed information</p>\n            <table>\n              <thead>\n                <tr>\n                  <th>ZK Gas Used</th>\n                  <th>Normal Gas Used</th>\n                  <th>Time Saved (ms)</th>\n                  <th>Efficiency Gain</th>\n                </tr>\n              </thead>\n              <tbody>\n                {isLoading && (\n                  <tr className=\"loading-comparison\">\n                    <td colSpan=\"4\">\n                      <div className=\"table-loading\">\n                        <span className=\"loading-spinner\"></span>\n                        <span>Processing your computation...</span>\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                {comparisons.map((comparison, index) => (\n                  <tr \n                    key={index} \n                    className={comparison.isNew ? 'highlight-row' : ''}\n                    onClick={() => handleComparisonClick(comparison, index)}\n                  >\n                    <td>{comparison.zkGasUsed.toLocaleString()}</td>\n                    <td>{comparison.normalGasUsed.toLocaleString()}</td>\n                    <td>{comparison.timeSaved} ms</td>\n                    <td>\n                      {Math.round(((comparison.normalGasUsed - comparison.zkGasUsed) / comparison.normalGasUsed) * 100)}%\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </section>\n      \n      {/* Detail Modal */}\n      {showDetailModal && selectedComparison && (\n        <div className=\"modal-overlay\" onClick={closeDetailModal}>\n          <div className=\"detail-modal\" onClick={(e) => e.stopPropagation()}>\n            <button className=\"close-modal\" onClick={closeDetailModal}>×</button>\n            <h2>Computation Details</h2>\n            \n            <div className=\"detail-section\">\n              <h3>Performance Metrics</h3>\n              <div className=\"detail-metrics\">\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">ZK Gas Used:</span>\n                  <span className=\"metric-value\">{selectedComparison.zkGasUsed.toLocaleString()} units</span>\n                </div>\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">Normal Gas Used:</span>\n                  <span className=\"metric-value\">{selectedComparison.normalGasUsed.toLocaleString()} units</span>\n                </div>\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">Time Saved:</span>\n                  <span className=\"metric-value\">{selectedComparison.timeSaved} ms</span>\n                </div>\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">Efficiency Gain:</span>\n                  <span className=\"metric-value\">{selectedComparison.efficiencyPercentage}%</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"detail-section\">\n              <h3>Computation Input</h3>\n              <div className=\"detail-input\">\n                <p><strong>Original Message:</strong> {selectedComparison.originalMessage}</p>\n                <p><strong>Input Size:</strong> {selectedComparison.inputBytes} bytes</p>\n              </div>\n            </div>\n            \n            <div className=\"detail-section\">\n              <h3>Processing Details</h3>\n              <div className=\"detail-processing\">\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">Prover Time:</span>\n                  <span className=\"metric-value\">{selectedComparison.processingDetails.proverTime} ms</span>\n                </div>\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">Verifier Time:</span>\n                  <span className=\"metric-value\">{selectedComparison.processingDetails.verifierTime} ms</span>\n                </div>\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">Proof Size:</span>\n                  <span className=\"metric-value\">{selectedComparison.processingDetails.proofSize} bytes</span>\n                </div>\n                <div className=\"detail-metric\">\n                  <span className=\"metric-label\">Trust Assumptions:</span>\n                  <span className=\"metric-value\">{selectedComparison.processingDetails.trustAssumptions}</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"detail-section\">\n              <h3>Dependencies</h3>\n              <ul className=\"dependencies-list\">\n                {selectedComparison.verificationDependencies.map((dep, index) => (\n                  <li key={index}>{dep}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <footer className=\"dashboard-footer\">\n        <p>Built on Ethereum's Sepolia testnet using EigenLayer's restaking technology</p>\n        <p>This is an educational demonstration to showcase the potential of ZK Co-Processors</p>\n        <p className=\"version-info\">Version 1.0.1 | <a href=\"https://github.com/yourusername/zkco\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}